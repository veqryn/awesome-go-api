// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"

	"github.com/go-faster/jx"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// An API error.
// Ref: #/components/schemas/Error
type Error struct {
	// A short, human-readable summary of the problem type. This value should not change between
	// occurrences of the error.
	Title string `json:"title"`
	// A human-readable explanation specific to this occurrence of the problem.
	Details OptString `json:"details"`
	// Optional map of properties.
	Properties OptNilErrorProperties `json:"properties"`
}

// GetTitle returns the value of Title.
func (s *Error) GetTitle() string {
	return s.Title
}

// GetDetails returns the value of Details.
func (s *Error) GetDetails() OptString {
	return s.Details
}

// GetProperties returns the value of Properties.
func (s *Error) GetProperties() OptNilErrorProperties {
	return s.Properties
}

// SetTitle sets the value of Title.
func (s *Error) SetTitle(val string) {
	s.Title = val
}

// SetDetails sets the value of Details.
func (s *Error) SetDetails(val OptString) {
	s.Details = val
}

// SetProperties sets the value of Properties.
func (s *Error) SetProperties(val OptNilErrorProperties) {
	s.Properties = val
}

// Optional map of properties.
type ErrorProperties map[string]jx.Raw

func (s *ErrorProperties) init() ErrorProperties {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

// GetErrorOK is response for GetError operation.
type GetErrorOK struct{}

// Ref: #/components/schemas/GetGreetingOutputBody
type GetGreetingOutputBody struct {
	// Greeting message.
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *GetGreetingOutputBody) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *GetGreetingOutputBody) SetMessage(val string) {
	s.Message = val
}

// NewOptNilErrorProperties returns new OptNilErrorProperties with value set to v.
func NewOptNilErrorProperties(v ErrorProperties) OptNilErrorProperties {
	return OptNilErrorProperties{
		Value: v,
		Set:   true,
	}
}

// OptNilErrorProperties is optional nullable ErrorProperties.
type OptNilErrorProperties struct {
	Value ErrorProperties
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilErrorProperties was set.
func (o OptNilErrorProperties) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilErrorProperties) Reset() {
	var v ErrorProperties
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilErrorProperties) SetTo(v ErrorProperties) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilErrorProperties) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilErrorProperties) SetToNull() {
	o.Set = true
	o.Null = true
	var v ErrorProperties
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilErrorProperties) Get() (v ErrorProperties, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilErrorProperties) Or(d ErrorProperties) ErrorProperties {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// PostReviewCreated is response for PostReview operation.
type PostReviewCreated struct{}

// Ref: #/components/schemas/PostReviewInputBody
type PostReviewInputBody struct {
	// Author of the review.
	Author string `json:"author"`
	// Review message.
	Message OptString `json:"message"`
	// Rating from 1 to 5.
	Rating int64 `json:"rating"`
}

// GetAuthor returns the value of Author.
func (s *PostReviewInputBody) GetAuthor() string {
	return s.Author
}

// GetMessage returns the value of Message.
func (s *PostReviewInputBody) GetMessage() OptString {
	return s.Message
}

// GetRating returns the value of Rating.
func (s *PostReviewInputBody) GetRating() int64 {
	return s.Rating
}

// SetAuthor sets the value of Author.
func (s *PostReviewInputBody) SetAuthor(val string) {
	s.Author = val
}

// SetMessage sets the value of Message.
func (s *PostReviewInputBody) SetMessage(val OptString) {
	s.Message = val
}

// SetRating sets the value of Rating.
func (s *PostReviewInputBody) SetRating(val int64) {
	s.Rating = val
}
